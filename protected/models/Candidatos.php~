<?php

/**
 * This is the model class for table "Candidatos".
 *
 * The followings are the available columns in table 'Candidatos':
 * @property integer $IdCandidato
 * @property string $Nombres
 * @property string $Documento
 * @property string $Direccion
 * @property string $Telefono
 * @property string $Email
 * @property string $NroRadicado
 * @property string $FechaInscripcion
 * @property string $Foto
 * @property string $Celular
 * @property integer $CodEleccion
 * @property integer $CodRegion
 * @property integer $CodBarrio
 *
 * The followings are the available model relations:
 * @property Barrios $codBarrio
 * @property Elecciones $codEleccion
 * @property Regiones $codRegion
 */
class Candidatos extends CActiveRecord
{
	public $elecciones = Elecciones::model()->findAll();
	//public static $listElecciones = CHtml::listData($elecciones,'IdEleccion','Nombre');

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'Candidatos';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('Nombres, Documento, Direccion, Telefono, Email, Foto, CodEleccion, CodRegion, CodBarrio', 'required'),
			array('CodEleccion, CodRegion, CodBarrio', 'numerical', 'integerOnly'=>true),
			array('Nombres, Email', 'length', 'max'=>100),
			array('Documento, Direccion, Telefono, Foto', 'length', 'max'=>50),
			array('NroRadicado, Celular', 'length', 'max'=>20),
			// The following rule is used by search().
			// @todo Please remove those attributes that should not be searched.
			array('IdCandidato, Nombres, Documento, Direccion, Telefono, Email, NroRadicado, FechaInscripcion, Foto, Celular, CodEleccion, CodRegion, CodBarrio', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'codBarrio' => array(self::BELONGS_TO, 'Barrios', 'CodBarrio'),
			'codEleccion' => array(self::BELONGS_TO, 'Elecciones', 'CodEleccion'),
			'codRegion' => array(self::BELONGS_TO, 'Regiones', 'CodRegion'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'IdCandidato' => 'Id Candidato',
			'Nombres' => 'Nombres',
			'Documento' => 'Documento',
			'Direccion' => 'Dirección',
			'Telefono' => 'Teléfono',
			'Email' => 'Email',
			'NroRadicado' => 'Número Radicado',
			'FechaInscripcion' => 'Fecha Inscripción',
			'Foto' => 'Foto',
			'Celular' => 'Celular',
			'CodEleccion' => 'Elección',
			'CodRegion' => 'Región',
			'CodBarrio' => 'Barrio',
		);
	}

	public static function getListElections($key=null) {
                if($key!==null)
                       return self::$listElecciones[$key];
                return self::$listElecciones;
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 *
	 * Typical usecase:
	 * - Initialize the model fields with values from filter form.
	 * - Execute this method to get CActiveDataProvider instance which will filter
	 * models according to data in model fields.
	 * - Pass data provider to CGridView, CListView or any similar widget.
	 *
	 * @return CActiveDataProvider the data provider that can return the models
	 * based on the search/filter conditions.
	 */
	public function search()
	{
		// @todo Please modify the following code to remove attributes that should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('IdCandidato',$this->IdCandidato);
		$criteria->compare('Nombres',$this->Nombres,true);
		$criteria->compare('Documento',$this->Documento,true);
		$criteria->compare('Direccion',$this->Direccion,true);
		$criteria->compare('Telefono',$this->Telefono,true);
		$criteria->compare('Email',$this->Email,true);
		$criteria->compare('NroRadicado',$this->NroRadicado,true);
		$criteria->compare('FechaInscripcion',$this->FechaInscripcion,true);
		$criteria->compare('Foto',$this->Foto,true);
		$criteria->compare('Celular',$this->Celular,true);
		$criteria->compare('CodEleccion',$this->CodEleccion);
		$criteria->compare('CodRegion',$this->CodRegion);
		$criteria->compare('CodBarrio',$this->CodBarrio);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}

	/**
	 * Returns the static model of the specified AR class.
	 * Please note that you should have this exact method in all your CActiveRecord descendants!
	 * @param string $className active record class name.
	 * @return Candidatos the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}
}
